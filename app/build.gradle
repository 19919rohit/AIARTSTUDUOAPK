/*
  Smart WebView v7
  https://github.com/mgks/Android-SmartWebView

  A modern, open-source WebView wrapper for building advanced hybrid Android apps.
  Native features, modular plugins, and full customisation—built for developers.

  - Documentation: https://docs.mgks.dev/smart-webview  
  - Plugins: https://docs.mgks.dev/smart-webview/plugins  
  - Discussions: https://github.com/mgks/Android-SmartWebView/discussions  
  - Sponsor the Project: https://github.com/sponsors/mgks  

  MIT License — https://opensource.org/licenses/MIT  

  Mentioning Smart WebView in your project helps others find it and keeps the dev loop alive.
*/

plugins {
	id 'com.android.application'
	
}

def getSwvProperties() {
	def properties = new Properties()
	def propertiesFile = file('src/main/assets/swv.properties')
	if (propertiesFile.exists()) {
		properties.load(propertiesFile.newDataInputStream())
	} else {
		// Fallback or error if the file is missing
		throw new GradleException("swv.properties file not found in app/src/main/assets/")
	}
	return properties
}
def swvProps = getSwvProperties()

android {
	namespace swvProps.getProperty('build.application.id', 'mgks.os.swv')
	compileSdk swvProps.getProperty('build.sdk.compile', '35').toInteger()

	defaultConfig {
		applicationId swvProps.getProperty('build.application.id', 'mgks.os.swv')
		minSdk swvProps.getProperty('build.sdk.min', '24').toInteger()
		targetSdk swvProps.getProperty('build.sdk.compile', '35').toInteger()
		versionCode swvProps.getProperty('build.version.code', '1').toInteger()
		versionName swvProps.getProperty('build.version.name', '1.0')
		multiDexEnabled true // enable if method count exceeds 64K
	}

	buildTypes {
		release {
			minifyEnabled false // consider enabling for production
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	buildFeatures {
		buildConfig true
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_17
		targetCompatibility JavaVersion.VERSION_17
	}

	// Optional: If you need to configure flavors
	// productFlavors {
	// }
}

dependencies {
	testImplementation 'junit:junit:4.13.2'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

	implementation fileTree(include: ['*.jar'], dir: 'libs')

	implementation 'androidx.multidex:multidex:2.0.1'

	// Firebase
	

	

	implementation 'com.google.android.material:material:1.12.0'

	implementation 'androidx.core:core-splashscreen:1.0.1'
	implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
	implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
	implementation 'androidx.appcompat:appcompat:1.7.1'
	implementation 'androidx.browser:browser:1.8.0'
	implementation 'androidx.work:work-runtime:2.10.2'

	// Plugins
	implementation 'com.journeyapps:zxing-android-embedded:4.3.0' // ZXing library for QR code scanning
	implementation 'androidx.biometric:biometric:1.1.0' // Biometric authentication library
}
